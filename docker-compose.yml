services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: api-fastapi-base
    volumes:
      - ./api:/api
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      - db
    networks:
      - app-network-fastapi-base
    environment:
      ENV: ${ENV}

      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}

      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}

      PYTHONPATH: /api

  db:
    image: postgres:latest
    container_name: db-fastapi-base
    restart: always
    networks:
      - app-network-fastapi-base
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:${DB_PORT}"
    volumes:
      - db-volume:/var/lib/postgresql/data

  nginx:
    build:
      context: ./nginx
    container_name: nginx-fastapi-base
    ports:
      - "80:80"
    environment:
      API_HOST: api
      API_PORT: ${SERVER_PORT}
    depends_on:
      - api
    networks:
      - app-network-fastapi-base

networks:
  app-network-fastapi-base:
    driver: bridge

volumes:
  db-volume:
